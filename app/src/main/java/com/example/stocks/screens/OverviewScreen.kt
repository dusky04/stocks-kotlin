package com.example.stocks.screens

import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyRow
import androidx.compose.foundation.lazy.items
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Add
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.ExtendedFloatingActionButton
import androidx.compose.material3.Icon
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.material3.rememberModalBottomSheetState
import androidx.compose.runtime.Composable
import androidx.compose.runtime.LaunchedEffect
import androidx.compose.runtime.collectAsState
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.rememberCoroutineScope
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.stocks.StocksViewModel
import com.example.stocks.components.BottomSheet
import com.example.stocks.components.TopNavBar
import com.example.stocks.data.CompanyOverviewData
import com.example.stocks.ui.theme.backgroundColors
import com.example.stocks.ui.theme.sansFontFamily

// FIXME: Can't really show change amount or market status from this endpoint!

@Composable
fun PillShapedBox(text: String) {
    Box(
        modifier = Modifier
            .border(
                width = 1.dp,
                color = Color(0xFFDADCE0), // light gray border color
                shape = RoundedCornerShape(24.dp)
            )
            .background(
                color = Color(0xFFF1F3F4),
                shape = RoundedCornerShape(24.dp)
            )
    ) {
        Text(
            text = text,
            fontFamily = sansFontFamily,
            modifier = Modifier.padding(horizontal = 12.dp, vertical = 2.dp),
            fontWeight = FontWeight.Medium
        )
    }
}

val companyOverviewData = CompanyOverviewData(
    address = "1 NEW ORCHARD ROAD, ARMONK, NY, US",
    analystRatingBuy = "8",
    analystRatingHold = "9",
    analystRatingSell = "2",
    analystRatingStrongBuy = "2",
    analystRatingStrongSell = "1",
    analystTargetPrice = "258.02",
    assetType = "Common Stock",
    beta = "0.652",
    bookValue = "28.92",
    cIK = "51143",
    country = "USA",
    currency = "USD",
    dayMovingAverage50 = "260.63",
    dayMovingAverage200 = "238.85",
    description = "International Business Machines Corporation (IBM) is an American multinational technology company headquartered in Armonk, New York, with operations in over 170 countries. The company began in 1911, founded in Endicott, New York, as the Computing-Tabulating-Recording Company (CTR) and was renamed International Business Machines in 1924. IBM is incorporated in New York. IBM produces and sells computer hardware, middleware and software, and provides hosting and consulting services in areas ranging from mainframe computers to nanotechnology. IBM is also a major research organization, holding the record for most annual U.S. patents generated by a business (as of 2020) for 28 consecutive years. Inventions by IBM include the automated teller machine (ATM), the floppy disk, the hard disk drive, the magnetic stripe card, the relational database, the SQL programming language, the UPC barcode, and dynamic random-access memory (DRAM). The IBM mainframe, exemplified by the System/360, was the dominant computing platform during the 1960s and 1970s.",
    dilutedEPSTTM = "5.84",
    dividendDate = "2025-06-10",
    dividendPerShare = "6.68",
    dividendYield = "0.023",
    eBITDA = "13950000000",
    ePS = "5.84",
    eVToEBITDA = "25.95",
    eVToRevenue = "5.09",
    exDividendDate = "2025-05-09",
    exchange = "NYSE",
    fiscalYearEnd = "December",
    forwardPE = "26.53",
    grossProfitTTM = "35840000000",
    industry = "COMPUTER & OFFICE EQUIPMENT",
    latestQuarter = "2025-03-31",
    marketCapitalization = "271318860000",
    name = "International Business Machines",
    officialSite = "https://www.ibm.com",
    operatingMarginTTM = "0.124",
    pEGRatio = "2.158",
    pERatio = "49.99",
    priceToBookRatio = "10.06",
    priceToSalesRatioTTM = "4.318",
    profitMargin = "0.0871",
    quarterlyEarningsGrowthYOY = "-0.349",
    quarterlyRevenueGrowthYOY = "0.005",
    returnOnAssetsTTM = "0.0447",
    returnOnEquityTTM = "0.218",
    revenuePerShareTTM = "67.97",
    revenueTTM = "62832001000",
    sector = "TECHNOLOGY",
    sharesOutstanding = "929397000",
    symbol = "IBM",
    trailingPE = "49.99",
    weekHigh = "296.16",
    weekLow = "168.29"
)

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun OverviewScreen(
    viewModel: StocksViewModel,
    ticker: String,
) {
//    val companyOverviewData by viewModel.companyOverviewData.collectAsState()
    val watchlists by viewModel.watchLists.collectAsState()

    LaunchedEffect(true) {
        // Get the company data through ticker name
//        viewModel.getCompanyOverviewData(ticker)
    }
    val scope = rememberCoroutineScope()
    val sheetState = rememberModalBottomSheetState(skipPartiallyExpanded = false)
    var showBottomSheet by remember { mutableStateOf(false) }

    Scaffold(
        topBar = { TopNavBar("Overview") },
        floatingActionButton = {
            ExtendedFloatingActionButton(
                text = { Text("Show bottom sheet") },
                icon = { Icon(Icons.Filled.Add, contentDescription = "") },
                onClick = {
                    showBottomSheet = true
                }
            )
        }
    ) { innerPadding ->
        Column(
            modifier = Modifier
                .padding(innerPadding)
                .fillMaxWidth()
                .padding(horizontal = 16.dp)
                .verticalScroll(rememberScrollState()),
            verticalArrangement = Arrangement.spacedBy(16.dp)
        ) {
            // Top Card
            Card(
                modifier = Modifier.fillMaxWidth(),
                shape = RoundedCornerShape(20.dp),
            ) {
                Column(
                    modifier = Modifier
                        .fillMaxWidth()
                        .background(backgroundColors.random())
                        .padding(24.dp)
                ) {
                    Text(
                        text = ticker,
                        style = MaterialTheme.typography.labelLarge,
                        fontFamily = sansFontFamily,
                        letterSpacing = 1.2.sp,
                        color = Color.White
                    )
                    Spacer(modifier = Modifier.height(4.dp))
                    Text(
                        text = companyOverviewData.name ?: "",
                        style = MaterialTheme.typography.headlineSmall,
                        fontWeight = FontWeight.Bold,
                        fontFamily = sansFontFamily,
                        color = Color.White
                    )
                }
            }

            // Pill Labels
            Card(
                shape = RoundedCornerShape(20.dp),
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(containerColor = MaterialTheme.colorScheme.surface)
            ) {
                LazyRow(
                    horizontalArrangement = Arrangement.spacedBy(4.dp),
                    modifier = Modifier.padding(12.dp)
                ) {
                    items(
                        listOf(
                            companyOverviewData.exchange ?: "",
                            companyOverviewData.sector ?: "",
                            companyOverviewData.industry ?: ""
                        )
                    ) { label ->
                        PillShapedBox(label)
                    }
                }
            }

            // Info Cards Section
            Card(
                shape = RoundedCornerShape(20.dp),
                modifier = Modifier.fillMaxWidth(),
                elevation = CardDefaults.cardElevation(defaultElevation = 4.dp)
            ) {
                Column(modifier = Modifier.padding(16.dp)) {
                    Row(
                        modifier = Modifier.fillMaxWidth(),
                        horizontalArrangement = Arrangement.spacedBy(12.dp)
                    ) {
                        InfoCard("Market Cap", "$270.5B", modifier = Modifier.weight(1f))
                        InfoCard("P/E Ratio", "49.75", modifier = Modifier.weight(1f))
                    }

                    Spacer(modifier = Modifier.height(12.dp))

                    Row(
                        modifier = Modifier.fillMaxWidth(),
                        horizontalArrangement = Arrangement.spacedBy(12.dp)
                    ) {
                        InfoCard("EPS", "$5.85", modifier = Modifier.weight(1f))
                        InfoCard("Dividend Yield", "2.31%", modifier = Modifier.weight(1f))
                    }

                    Spacer(modifier = Modifier.height(12.dp))

                    Row(
                        modifier = Modifier.fillMaxWidth(),
                        horizontalArrangement = Arrangement.spacedBy(12.dp)
                    ) {
                        InfoCard("52W High", "$296.16", modifier = Modifier.weight(1f))
                        InfoCard("52W Low", "$165.52", modifier = Modifier.weight(1f))
                    }
                }
            }

            // About Section
            Card(
                shape = RoundedCornerShape(20.dp),
                modifier = Modifier.fillMaxWidth(),
                elevation = CardDefaults.cardElevation(defaultElevation = 4.dp)
            ) {
                Column(modifier = Modifier.padding(16.dp)) {
                    Text(
                        text = "About",
                        fontFamily = sansFontFamily,
                        style = MaterialTheme.typography.titleMedium,
                        fontWeight = FontWeight.SemiBold,
                        modifier = Modifier.padding(bottom = 12.dp)
                    )

                    Text(
                        text = companyOverviewData.description ?: "",
                        style = MaterialTheme.typography.bodyMedium,
                        color = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.8f),
                        lineHeight = 20.sp
                    )
                }
            }
            Card(
                shape = RoundedCornerShape(20.dp),
                modifier = Modifier.fillMaxWidth(),
                elevation = CardDefaults.cardElevation(defaultElevation = 4.dp)
            ) {
                Column(modifier = Modifier.padding(16.dp)) {
                    CompanyDetailRow(
                        "Website",
                        companyOverviewData.officialSite ?: "",
                        isLast = true
                    )
                }
            }

            Spacer(modifier = Modifier.height(24.dp))
        }

        if (showBottomSheet) {
            BottomSheet(
                onDismiss = { showBottomSheet = false },
                sheetState = sheetState,
                stock = companyOverviewData,
                availableWatchLists = watchlists.keys.toList(),
                onSave = { stockTicker, selectedLists ->
                    viewModel.addStockToWatchLists(companyOverviewData, selectedLists)
                    showBottomSheet = false
                }
            )
        }
    }
}

@Composable
private fun InfoCard(
    title: String, value: String, modifier: Modifier = Modifier
) {
    Card(
        modifier = modifier,
        shape = RoundedCornerShape(16.dp),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.surface
        ),
        elevation = CardDefaults.cardElevation(defaultElevation = 4.dp)
    ) {
        Column(
            modifier = Modifier
                .padding(16.dp)
                .fillMaxWidth(),
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Text(
                text = title,
                style = MaterialTheme.typography.bodySmall,
                color = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.7f)
            )
            Spacer(modifier = Modifier.height(4.dp))
            Text(
                text = value,
                style = MaterialTheme.typography.titleMedium,
                fontWeight = FontWeight.Bold,
                color = MaterialTheme.colorScheme.onSurface
            )
        }
    }
}

@Composable
private fun CompanyDetailRow(
    label: String, value: String, isLast: Boolean = false
) {
    Column {
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically
        ) {
            Text(
                text = label.uppercase(),
                style = MaterialTheme.typography.bodySmall,
                color = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.5f),
                fontWeight = FontWeight.SemiBold,
                modifier = Modifier.weight(1f),
            )
            Text(
                text = value,
                fontFamily = sansFontFamily,
                style = MaterialTheme.typography.bodyMedium,
                fontWeight = FontWeight.Medium,
                color = MaterialTheme.colorScheme.onSurface
            )
        }
        if (!isLast) {
            Spacer(modifier = Modifier.height(5.dp))
        }
    }
}